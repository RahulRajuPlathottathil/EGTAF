{
  "stats": {
    "suites": 1,
    "tests": 8,
    "passes": 8,
    "pending": 0,
    "failures": 0,
    "start": "2024-05-10T07:21:47.611Z",
    "end": "2024-05-10T07:22:14.264Z",
    "duration": 26653,
    "testsRegistered": 8,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "3beb19d2-0c97-4bbb-b8d4-4e5b9b105092",
      "title": "",
      "fullFile": "cypress\\e2e\\tests\\TestCases.cy.js",
      "file": "cypress\\e2e\\tests\\TestCases.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1fd6fa6e-54cd-4371-a3d7-8aa5f79c46dd",
          "title": "Practice Page Test Suite",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Practice page dropdown test",
              "fullTitle": "Practice Page Test Suite Practice page dropdown test",
              "timedOut": null,
              "duration": 7204,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const {\n  options,\n  defaultSelection,\n  valueToSelect\n} = this.data.dropdown;\nthis.pageRepo.drp_dropDown.should('exist').and('be.visible').and('be.enabled');\nthis.pageRepo.drp_dropDown.children().each(($ele, index, $list) => cy.wrap($ele).should('have.value', options[index]));\nthis.pageRepo.drp_dropDown.should('have.value', defaultSelection);\nthis.pageRepo.do_dropDownSelection(valueToSelect);",
              "err": {},
              "uuid": "f5c4730e-4f1b-41b0-86f7-f3e7b4251bab",
              "parentUUID": "1fd6fa6e-54cd-4371-a3d7-8aa5f79c46dd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Practice page image upload test",
              "fullTitle": "Practice Page Test Suite Practice page image upload test",
              "timedOut": null,
              "duration": 2300,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const image = this.data.imageUpload;\nthis.pageRepo.btn_chooseFile.should('exist').and('be.visible').and('be.enabled');\nthis.pageRepo.do_uploadImage(image);\nthis.pageRepo.img_Loadedimage.should('exist').and('be.visible');",
              "err": {},
              "uuid": "ae3341a7-9992-4be4-ab92-07605ee6c0ca",
              "parentUUID": "1fd6fa6e-54cd-4371-a3d7-8aa5f79c46dd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Practice page alert test",
              "fullTitle": "Practice Page Test Suite Practice page alert test",
              "timedOut": null,
              "duration": 2323,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const {\n  type,\n  name,\n  expectedText\n} = this.data.alert;\nconst pageRepo = new _PageRepo.default();\nthis.pageRepo.txt_EnterName.should('exist').and('be.enabled');\nthis.pageRepo.do_fillName(name);\nthis.pageRepo.do_grabAlertMessage(type, this.pageRepo.btn_Alert, expectedText);",
              "err": {},
              "uuid": "661f0769-ae52-4802-94e0-21930b22fad0",
              "parentUUID": "1fd6fa6e-54cd-4371-a3d7-8aa5f79c46dd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Practice page confirm alert test",
              "fullTitle": "Practice Page Test Suite Practice page confirm alert test",
              "timedOut": null,
              "duration": 2522,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const {\n  type,\n  name,\n  expectedText\n} = this.data.confirm;\nthis.pageRepo.txt_EnterName.should('exist').and('be.enabled');\nthis.pageRepo.do_fillName(name);\nthis.pageRepo.do_grabAlertMessage(type, this.pageRepo.btn_Confirm, expectedText);",
              "err": {},
              "uuid": "b94532d5-3607-4d15-a6af-8ed0fd6ce7f5",
              "parentUUID": "1fd6fa6e-54cd-4371-a3d7-8aa5f79c46dd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Practice page hide and show an element",
              "fullTitle": "Practice Page Test Suite Practice page hide and show an element",
              "timedOut": null,
              "duration": 3754,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.pageRepo.txt_displayedText.should('be.visible');\nthis.pageRepo.do_hideElement('Hide Me!!').should('not.be.visible');\nthis.pageRepo.do_showElement().should('be.visible');",
              "err": {},
              "uuid": "1fbd6f7f-b6d8-4d96-a788-6a3440c89706",
              "parentUUID": "1fd6fa6e-54cd-4371-a3d7-8aa5f79c46dd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Practice page mouse hover test",
              "fullTitle": "Practice Page Test Suite Practice page mouse hover test",
              "timedOut": null,
              "duration": 1716,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const {\n  ul\n} = this.data.mouseHover;\nlet pageRepo = new _PageRepo.default();\npageRepo.btn_moseHover.should('exist').and('be.visible');\npageRepo.do_mouserHover().each(($ele, index, $list) => {\n  cy.wrap($ele).invoke('text').should('equal', ul[index]);\n});",
              "err": {},
              "uuid": "91e3bd23-94dc-4ade-823c-2d3f5990edd2",
              "parentUUID": "1fd6fa6e-54cd-4371-a3d7-8aa5f79c46dd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Practice page open tab test",
              "fullTitle": "Practice Page Test Suite Practice page open tab test",
              "timedOut": null,
              "duration": 3944,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const {\n  url\n} = this.data.openTab;\nthis.pageRepo.do_openInSameTab();\ncy.get('@newUrl').should('equal', url);",
              "err": {},
              "uuid": "bbc6e557-a1e8-483f-81e3-885593a0df41",
              "parentUUID": "1fd6fa6e-54cd-4371-a3d7-8aa5f79c46dd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Practice page iframe element interaction test",
              "fullTitle": "Practice Page Test Suite Practice page iframe element interaction test",
              "timedOut": null,
              "duration": 1776,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const {\n  nav\n} = this.data.frame_nav;\nthis.pageRepo.do_EGframeSwitch().each(($ele, index, $list) => {\n  cy.wrap($ele).invoke('text').should('contain', nav[index]);\n});",
              "err": {},
              "uuid": "1b003314-36d9-4e8a-83ba-b12c29228de8",
              "parentUUID": "1fd6fa6e-54cd-4371-a3d7-8aa5f79c46dd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f5c4730e-4f1b-41b0-86f7-f3e7b4251bab",
            "ae3341a7-9992-4be4-ab92-07605ee6c0ca",
            "661f0769-ae52-4802-94e0-21930b22fad0",
            "b94532d5-3607-4d15-a6af-8ed0fd6ce7f5",
            "1fbd6f7f-b6d8-4d96-a788-6a3440c89706",
            "91e3bd23-94dc-4ade-823c-2d3f5990edd2",
            "bbc6e557-a1e8-483f-81e3-885593a0df41",
            "1b003314-36d9-4e8a-83ba-b12c29228de8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 25539,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/results/mochawesome",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}